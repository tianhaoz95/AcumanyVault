matrix:
  allow_failures:
    - env: ALLOW_TASK_FAILURE=yes
  include:
    - stage: Desktop Vault website unit test
      language: node_js
      dist: xenial
      node_js:
        - "10"
      script: |
        cd ./ui/vault_desktop_web
        npm install
        npm test -- --coverage
    - stage: Test Vault desktop website production build
      language: node_js
      dist: xenial
      if: type = pull_request AND branch = master
      node_js:
        - "10"
      script: |
        cd ./ui/vault_desktop_web
        npm install
        npm run build
    - stage: Test Vault desktop website storybook compilation
      language: node_js
      dist: xenial
      if: type = pull_request AND branch = master
      node_js:
        - "10"
      script: |
        cd ./ui/vault_desktop_web
        npm install
        npm run build-storybook
    - stage: Deploy documentation to GitHub Pages
      language: node_js
      dist: xenial
      if: branch = master AND fork = false AND type = push
      node_js:
        - "10"
      script: |
        cd ..
        mkdir pushdoc
        cd ./AcumanyVault
        cp ./misc/docs/README.md ../pushdoc
        cp -r ./misc/docs/design ../pushdoc/design
        cd ./ui/vault_desktop_web
        npm install
        npm test -- --coverage
        npm run build-storybook
        cp -r ./storybook-static ../../../pushdoc/vault_desktop_website_storybook_doc
        cp -r ./coverage/lcov-report ../../../pushdoc/vault_desktop_website_coverage_report
        cd ../../../pushdoc
        git init
        git checkout -b pushdoc
        git remote add origin https://github.com/${TRAVIS_REPO_SLUG}.git
        git fetch
        git config user.name "Acumany Bot"
        git config user.email "bot@acumany.com"
        git add -A && git commit -m "Upload documentation [skip ci]"
        git push --force https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG} pushdoc:gh-pages
    - stage: Deploy desktop Vault website to Firebase
      language: node_js
      dist: xenial
      if: branch = deploy AND fork = false
      node_js:
        - "10"
      before_install:
        - npm install -g firebase-tools
      script: |
        cd ./ui/vault_desktop_web
        npm install
        npm test
        npm run build
        firebase deploy --only hosting:acumany-vault --token "$FIREBASE_TOKEN"
    - stage: Deploy Firebase backend microservices
      language: node_js
      dist: xenial
      if: branch = deploy
      node_js:
        - "10"
      before_install:
        - npm install -g firebase-tools
      script: |
        cd ./server/cloud_funcs
        cd ./functions
        npm install
        cd ..
        firebase deploy --only functions --token "$FIREBASE_TOKEN"
    - stage: Deploy Javascript Vault client
      language: node_js
      dist: xenial
      if: branch = deploy AND fork = false
      env: ALLOW_TASK_FAILURE=yes
      node_js:
        - "10"
      script: |
        cd ./client/vault_client_js
        npm install
    - stage: Build Android Vault App
      language: android
      jdk: oraclejdk8
      if: branch = deploy AND fork = false
      env: ALLOW_TASK_FAILURE=yes
      sudo: true
      android:
        components:
          - android-28
          - build-tools-28.0.3
          - extra
          - tools
          - platform-tools
          - extra-google-m2repository
          - extra-android-m2repository
        licenses:
          - android-sdk-preview-license-.+
          - android-sdk-license-.+
          - google-gdk-license-.+
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libstdc++6
            - lib32stdc++6
            - libc6:i386
            - libncurses5:i386
            - libstdc++6:i386
            - lib32z1
            - libbz2-1.0:i386
      before_install:
        - ls $ANDROID_HOME/tools/bin
        - yes | sudo $ANDROID_HOME/tools/bin/sdkmanager "platforms;android-28"
        - yes | sudo $ANDROID_HOME/tools/bin/sdkmanager "build-tools;28.0.3"
        - yes | sudo $ANDROID_HOME/tools/bin/sdkmanager --update
        - yes | sudo $ANDROID_HOME/tools/bin/sdkmanager --licenses
        - git clone https://github.com/flutter/flutter.git -b beta
        - ./flutter/bin/flutter doctor -v
      script: |
        cd ./ui/vault_mobile
        ../../flutter/bin/flutter test
    - stage: Build iOS Vault App
      osx_image: xcode10
      language: objective-c
      if: branch = deploy AND fork = false
      env: ALLOW_TASK_FAILURE=yes
      before_install:
        - brew update
        - brew install --HEAD usbmuxd
        - brew link usbmuxd
        - brew install --HEAD libimobiledevice
        - brew install ideviceinstaller
        - brew install ios-deploy
        - git clone https://github.com/flutter/flutter.git -b beta
        - ./flutter/bin/flutter doctor -v
      script: |
        cd ./ui/vault_mobile
        ../../flutter/bin/flutter test
